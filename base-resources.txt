TODO
  how to tune all the yaml in this repo for the user specific
    like container name or whatever
    probably have to move to JEXL and register project variables
    get it to go with hardwired values first

compute - video uses mbp m1
  git
  vs code with md preview plugin
  this demo kit repo
    base-resources.txt - terse list of required resources (this file)
    base-demo.txt - terse demo click through guidance
    labs markdown - instructions for the base demo
  docker (colima)
  helm
  harness cli
  minikube
    harness delegate
    prometheus
      kubectl create namespace monitoring
      kubectl -n monitoring apply -f ./misc/prometheus.yml
docker hub account and registry
  create a docker hub account if you don't have one
  create TODO project? in your docker hub account named harness-demo
  TODO might need backend container in github.. to get the architecture right
harness account - video uses fresh harness account against a fresh gmail to ensure representative experience
  turn on CI and CD
  get account id
  get pat
  create project Base Demo with slug Base_Demo
  terraform
    preparation
      cd into kit such that ./main.tf exists
      update se-parms.tfvars with your values
      set env var DEMO_BASE_PAT
    commands
      terraform init
      terraform plan -var="pat=$DEMO_BASE_PAT" -var-file="se-parms.tfvars" -out=plan.tfplan 
      terraform apply -auto-approve plan.tfplan

      terraform destroy -auto-approve -target=harness_platform_template.compile_application -var="pat=$DEMO_BASE_PAT" -var-file="se-parms.tfvars"
      terraform destroy -auto-approve -target=harness_platform_connector_docker.workshopdocker -var="pat=$DEMO_BASE_PAT" -var-file="se-parms.tfvars"
    covers
      connector k8s
      connector docker
      connector prometheus
      secret docker password
      secret docker username
      template compile application
      environment dev
      environment prod
      infrastructure k8s dev
      service backend

  log into cli
    harness login --account-id $DEMO_BASE_ACCOUNT_ID --api-key $DEMO_BASE_PAT
  repo (ui)
    create repo, get clone pat, git commands below to push this repo to new repo in new harness account
    git remote -v
    git remote set-url origin https://username@github.com/username/repository.git
    git push
    'replace all' githubuser/harness-demo to {your github user account id for image path}/harness-demo 

harness elements created during the demo
  pipeline
  service frontend